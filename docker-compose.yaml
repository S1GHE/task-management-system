services:
  frontend:
    container_name: frontend-task-manager
    build:
      context: client
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 300mb

  api:
    container_name: api-task-manager
    build:
      context: api
      dockerfile: Dockerfile
    ports:
      - "8080:${API_PORT}"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 512mb
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/api/projects || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 2
    logging:
      driver: "json-file"
      options:
        max-size: "10mb"
        max-file: "10"


  database:
    container_name: postgres-task-manager
    image: postgres:14.8-alpine3.18
    environment:
      POSTGRES_DB: ${DB_NAME:?error}
      POSTGRES_USER: ${DB_USERNAME:?error}
      POSTGRES_PASSWORD: ${DB_PASSWORD:?error}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 2G
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10mb"
        max-file: "10"

networks:
  backend:

volumes:
  db-data: